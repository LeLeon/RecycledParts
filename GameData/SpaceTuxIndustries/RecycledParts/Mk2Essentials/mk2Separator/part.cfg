PART
{
	name = mk2Separator
	module = Part
	author = J.Patrick

	// mesh = model.mu
	scale = 1
	rescaleFactor = 1

	node_stack_top = -0.015, 0.185, -0.15, 0.0, 1.0, 0.0
	node_stack_bottom = -0.015, -0.065, -0.15, 0.0, -1.0, 0.0


	// --- FX definitions ---

	fx_gasBurst_white = 0.0, 0.0650517, 0.0, 0.0, 1.0, 0.0, decouple
	sound_vent_large = decouple


	// --- editor parameters ---
	TechRequired = advMetalworks
	entryCost = 7600
	cost = 740
	category = Coupling
	subcategory = 0
	title = #LOC.mk2ess_mk2Separator_title
	manufacturer = #LOC.mk2ess_mk2Separator_manufacturer
	description = #LOC.mk2ess_mk2Separator_description
	bulkheadProfiles = mk2
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 0.095
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 9
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 2000 // 3400
	fuelCrossFeed = False

	stageOffset = 1
	childStageOffset = 1

	tags = #LOC.mk2ess_mk2Separator_tags

	// ----- DO NOT EDIT BELOW THIS POINT ------

	MODEL
	{
		model = SpaceTuxIndustries/RecycledParts/Mk2Essentials/mk2Separator/model
	}
	MODULE
	{
		name = ModuleDecouple
		isOmniDecoupler = true
		ejectionForce = 250
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127

		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
}
